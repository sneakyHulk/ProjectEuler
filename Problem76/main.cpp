#include <iostream>
#include <cstdint>
#include <map>

int64_t bestimme_p(int32_t n) {
    static std::map<int32_t, int64_t> cache;
    if (n == 0) {
        return 1;
    }

    if (cache.contains(n)) {
        return cache[n];
    }

    int64_t sum = 0;
    bool plus = true;
    int32_t single_step = 1;
    int32_t double_step = 1;

    while (true) {
        if (n - double_step < 0) return sum;
        else n -= double_step;
        if (plus) sum += cache[n] = bestimme_p(n);
        else sum -= cache[n] = bestimme_p(n);

        if (n - single_step < 0) return sum;
        else n -= single_step;
        if (plus) sum += cache[n] = bestimme_p(n);
        else sum -= cache[n] = bestimme_p(n);

        single_step += 1;
        double_step += 2;
        plus = !plus;
    }
}

int main() {
    std::cout << bestimme_p(100) - 1 << std::endl;
}

/*
 * Studie
 *

p(0) = 1
p(1) = p(0) = 1
p(2) = p(1) + p(0) = 2
p(3) = p(2) + p(1) = 3
p(4) = p(3) + p(2) = 5
p(5) = p(4) + p(3) - p(0) = 7

     1 2 3 4 5 6 7 8 9
  2:1                   =1
  3:1 1                 =2
  4:1 2 1               =4
  5:1 2 2 1             =6
  6:1 3 3 2 1           =10
  7:1 3 4 3 2 1         =14
  8:1 4 5 5 3 2 1       =21
  9:1 4 7 6 5 3 2 1     =29
 10:1 5 8 9 7 5 3 2 1   =41

 10: =
 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1      +1

 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
 2 + 2 + 1 + 1 + 1 + 1 + 1 + 1
 2 + 2 + 2 + 1 + 1 + 1 + 1                  +5
 2 + 2 + 2 + 2 + 1 + 1
 2 + 2 + 2 + 2 + 2

 3 + 1 + 1 + 1 + 1 + 1 + 1 + 1
 3 + 2 + 1 + 1 + 1 + 1 + 1
 3 + 2 + 2 + 1 + 1 + 1
 3 + 2 + 2 + 2 + 1                          +8
 3 + 3 + 1 + 1 + 1 + 1
 3 + 3 + 2 + 1 + 1
 3 + 3 + 2 + 2
 3 + 3 + 3 + 1

 4 + 1 + 1 + 1 + 1 + 1 + 1
 4 + 2 + 1 + 1 + 1 + 1
 4 + 2 + 2 + 1 + 1
 4 + 2 + 2 + 2
 4 + 3 + 1 + 1 + 1                          +9
 4 + 3 + 2 + 1
 4 + 3 + 3
 4 + 4 + 1 + 1
 4 + 4 + 2

 5 + 1 + 1 + 1 + 1 + 1
 5 + 2 + 1 + 1 + 1
 5 + 2 + 2 + 1
 5 + 3 + 1 + 1                              +7
 5 + 3 + 2
 5 + 4 + 1
 5 + 5

 6 + 1 + 1 + 1 + 1
 6 + 2 + 1 + 1
 6 + 2 + 2                                  +5
 6 + 3 + 1
 6 + 4

 7 + 1 + 1 + 1
 7 + 2 + 1                                  +3
 7 + 3

 8 + 1 + 1                                  +2
 8 + 2

 9 + 1                                      +1
--------------------------
 9: =29
 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1      +1

 2 + 1 + 1 + 1 + 1 + 1 + 1 + 1
 2 + 2 + 1 + 1 + 1 + 1 + 1              +4
 2 + 2 + 2 + 1 + 1 + 1
 2 + 2 + 2 + 2 + 1

 3 + 1 + 1 + 1 + 1 + 1 + 1
 3 + 2 + 1 + 1 + 1 + 1
 3 + 2 + 2 + 1 + 1
 3 + 2 + 2 + 2                          +7
 3 + 3 + 1 + 1 + 1
 3 + 3 + 2 + 1
 3 + 3 + 3

 4 + 1 + 1 + 1 + 1 + 1
 4 + 2 + 1 + 1 + 1
 4 + 2 + 2 + 1                          +6
 4 + 3 + 1 + 1
 4 + 3 + 2
 4 + 4 + 1

 5 + 1 + 1 + 1 + 1
 5 + 2 + 1 + 1
 5 + 2 + 2                              +5
 5 + 3 + 1
 5 + 4

 6 + 1 + 1 + 1
 6 + 2 + 1                              +3
 6 + 3

 7 + 1 + 1                              +2
 7 + 2

 8 + 1                                  +1
--------------------------
 8: =21
 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1      +1

 2 + 1 + 1 + 1 + 1 + 1 + 1
 2 + 2 + 1 + 1 + 1 + 1              +4
 2 + 2 + 2 + 1 + 1
 2 + 2 + 2 + 2

 3 + 1 + 1 + 1 + 1 + 1
 3 + 2 + 1 + 1 + 1
 3 + 2 + 2 + 1                      +5
 3 + 3 + 1 + 1
 3 + 3 + 2

 4 + 1 + 1 + 1 + 1
 4 + 2 + 1 + 1
 4 + 2 + 2                          +5
 4 + 3 + 1
 4 + 4

 5 + 1 + 1 + 1
 5 + 2 + 1                          +3
 5 + 3

 6 + 1 + 1                          +2
 6 + 2

 7 + 1                              +1
--------------------------
 7: =14
 1 + 1 + 1 + 1 + 1 + 1 + 1      +1

 2 + 1 + 1 + 1 + 1 + 1
 2 + 2 + 1 + 1 + 1              +3
 2 + 2 + 2 + 1

 3 + 1 + 1 + 1 + 1
 3 + 2 + 1 + 1                  +4
 3 + 2 + 2
 3 + 3 + 1

 4 + 1 + 1 + 1
 4 + 2 + 1                      +3
 4 + 3

 5 + 1 + 1                      +2
 5 + 2

 6 + 1                          +1
--------------------------
 6: =10
 1 + 1 + 1 + 1 + 1 + 1      +1

 2 + 1 + 1 + 1 + 1
 2 + 2 + 1 + 1              +3
 2 + 2 + 2

 3 + 1 + 1 + 1
 3 + 2 + 1                  +3
 3 + 3

 4 + 1 + 1                  +2
 4 + 2

 5 + 1                      +1
 --------------------------
 5: =6
 1 + 1 + 1 + 1 + 1      +1

 2 + 1 + 1 + 1          +2
 2 + 2 + 1

 3 + 1 + 1              +2
 3 + 2

 4 + 1                  +1
--------------------------
 4: =4
 1 + 1 + 1 + 1      +1

 2 + 1 + 1          +2
 2 + 2

 3 + 1              +1
--------------------------
 3: =2
 1 + 1 + 1      +1

 2 + 1          +1
--------------------------
 2: =1
 1 + 1      +1
*/